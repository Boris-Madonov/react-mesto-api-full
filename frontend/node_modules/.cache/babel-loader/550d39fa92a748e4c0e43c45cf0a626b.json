{"ast":null,"code":"import _classCallCheck from\"/Users/boris/dev/react-mesto-auth/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/Users/boris/dev/react-mesto-auth/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";var Api=/*#__PURE__*/function(){function Api(options){_classCallCheck(this,Api);this._response=function(res){if(res.ok){return res.json();}return Promise.reject(\"\\u041E\\u0448\\u0438\\u0431\\u043A\\u0430: \".concat(res.status));};this._baseUrl=options.baseUrl;this._headers=options.headers;}_createClass(Api,[{key:\"getInitialCards\",value:function getInitialCards(){return fetch(\"\".concat(this._baseUrl,\"/cards\"),{headers:this._headers}).then(this._response);}},{key:\"getUserInfo\",value:function getUserInfo(){return fetch(\"\".concat(this._baseUrl,\"/users/me\"),{headers:this._headers}).then(this._response);}},{key:\"sendUserInfo\",value:function sendUserInfo(data){return fetch(\"\".concat(this._baseUrl,\"/users/me\"),{method:'PATCH',headers:this._headers,body:JSON.stringify({name:data.name,about:data.about})}).then(this._response);}},{key:\"sendUserAvatar\",value:function sendUserAvatar(data){return fetch(\"\".concat(this._baseUrl,\"/users/me/avatar\"),{method:'PATCH',headers:this._headers,body:JSON.stringify({avatar:data.link})}).then(this._response);}},{key:\"sendCard\",value:function sendCard(data){return fetch(\"\".concat(this._baseUrl,\"/cards\"),{method:'POST',headers:this._headers,body:JSON.stringify({name:data.name,link:data.link})}).then(this._response);}},{key:\"likeCard\",value:function likeCard(id){return fetch(\"\".concat(this._baseUrl,\"/cards/likes/\").concat(id),{method:'PUT',headers:this._headers}).then(this._response);}},{key:\"deleteLikeCard\",value:function deleteLikeCard(id){return fetch(\"\".concat(this._baseUrl,\"/cards/likes/\").concat(id),{method:'DELETE',headers:this._headers}).then(this._response);}},{key:\"deleteCard\",value:function deleteCard(id){return fetch(\"\".concat(this._baseUrl,\"/cards/\").concat(id),{method:'DELETE',headers:this._headers}).then(this._response);}}]);return Api;}();var api=new Api({baseUrl:'https://mesto.nomoreparties.co/v1/cohort-14',headers:{authorization:'e85ea904-e4e6-4bf9-b3e5-7844a7dfa51b','Content-Type':'application/json'}});export default api;","map":{"version":3,"sources":["/Users/boris/dev/react-mesto-auth/src/utils/api.js"],"names":["Api","options","_response","res","ok","json","Promise","reject","status","_baseUrl","baseUrl","_headers","headers","fetch","then","data","method","body","JSON","stringify","name","about","avatar","link","id","api","authorization"],"mappings":"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","sourcesContent":["class Api {\n    constructor(options) {\n        this._baseUrl = options.baseUrl;\n        this._headers = options.headers;\n    }\n\n    _response = (res) => {\n        if (res.ok) {\n            return res.json();\n        }\n        return Promise.reject(`Ошибка: ${res.status}`);\n    }\n\n    getInitialCards() {\n        return fetch(`${this._baseUrl}/cards`, {\n            headers: this._headers\n        })\n            .then(this._response)\n    }\n\n    getUserInfo() {\n        return fetch(`${this._baseUrl}/users/me`, {\n            headers: this._headers\n        })\n        .then(this._response)\n    }\n\n    sendUserInfo(data) {\n        return fetch(`${this._baseUrl}/users/me`, {\n            method: 'PATCH',\n            headers: this._headers,\n            body: JSON.stringify({\n                name: data.name,\n                about: data.about\n            })\n        })\n        .then(this._response)\n    }\n\n    sendUserAvatar(data) {\n        return fetch(`${this._baseUrl}/users/me/avatar`, {\n            method: 'PATCH',\n            headers: this._headers,\n            body: JSON.stringify({\n                avatar: data.link\n            })\n        })\n        .then(this._response)\n    }\n\n    sendCard(data) {\n        return fetch(`${this._baseUrl}/cards`, {\n            method: 'POST',\n            headers: this._headers,\n            body: JSON.stringify({\n                name: data.name,\n                link: data.link\n            })\n        })\n        .then(this._response)\n    }\n\n    likeCard(id) {\n        return fetch(`${this._baseUrl}/cards/likes/${id}`, {\n            method: 'PUT',\n            headers: this._headers\n        })\n        .then(this._response)\n    }\n\n    deleteLikeCard(id) {\n        return fetch(`${this._baseUrl}/cards/likes/${id}`, {\n            method: 'DELETE',\n            headers: this._headers\n        })\n        .then(this._response)\n    }\n\n    deleteCard(id) {\n        return fetch(`${this._baseUrl}/cards/${id}`, {\n            method: 'DELETE',\n            headers: this._headers\n        })\n        .then(this._response)\n    }\n}\n\nconst api = new Api({\n    baseUrl: 'https://mesto.nomoreparties.co/v1/cohort-14',\n    headers: {\n        authorization: 'e85ea904-e4e6-4bf9-b3e5-7844a7dfa51b',\n        'Content-Type': 'application/json'\n    }\n});\n\nexport default api"]},"metadata":{},"sourceType":"module"}