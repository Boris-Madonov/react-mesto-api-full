{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/boris/dev/react-mesto-auth/src/components/Login.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport FormFieldset from './FormFieldset';\nimport FormInput from './FormInput';\n\nfunction Login({\n  isLoading\n}) {\n  _s();\n\n  const [userEmail, setUserEmail] = React.useState('');\n  const [userPassword, setUserPassword] = React.useState('');\n\n  const handleChangeEmail = e => {\n    setUserEmail(e.target.value);\n  };\n\n  const handleChangePassword = e => {\n    setUserPassword(e.target.value);\n  };\n\n  const submitButtonText = isLoading ? 'Регистрация...' : 'Зарегистрироваться';\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    auth.register(userEmail, userPassword).then(res => {\n      if (res.statusCode !== 400) {\n        withRouter.history.push('/signin');\n      }\n    }).catch(error => console.log(error));\n    setUserEmail('');\n    setUserPassword('');\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"sign-screen\",\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"sign-screen__form\",\n      className: \"sign-screen__form\"\n      /* name={`${name}`} */\n      ,\n      action: \"#\",\n      method: \"POST\",\n      onSubmit: handleSubmit,\n      noValidate: true,\n      children: /*#__PURE__*/_jsxDEV(FormFieldset, {\n        formName: \"form__name_place_sign-screen\",\n        title: \"\\u0412\\u0445\\u043E\\u0434\",\n        formFieldset: \"form__fieldset_place_sign-screen\",\n        submitButton: \"form__submit-button_place_sign-screen\",\n        submit: \"\\u0412\\u043E\\u0439\\u0442\\u0438\",\n        children: [/*#__PURE__*/_jsxDEV(FormInput, {\n          formFieldName: \"form__field_place_sign-screen\",\n          entryFieldName: \"form__entry-field_place_sign-screen\",\n          inputId: \"sign-screen-entry-field-email\",\n          type: \"text\",\n          name: \"email\",\n          placeholder: \"Email\",\n          value: \"\",\n          onChange: \"\",\n          minLength: \"\",\n          maxLength: \"\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(FormInput, {\n          formFieldName: \"form__field_place_sign-screen\",\n          entryFieldName: \"form__entry-field_place_sign-screen\",\n          inputId: \"sign-screen-entry-field-password\",\n          type: \"text\",\n          name: \"password\",\n          placeholder: \"\\u041F\\u0430\\u0440\\u043E\\u043B\\u044C\",\n          value: \"\",\n          onChange: \"\",\n          minLength: \"\",\n          maxLength: \"\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Login, \"zemzGYHwsGFY0xQoKDbk8csw/P4=\");\n\n_c = Login;\nexport default Login;\n\nvar _c;\n\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"sources":["/Users/boris/dev/react-mesto-auth/src/components/Login.js"],"names":["React","FormFieldset","FormInput","Login","isLoading","userEmail","setUserEmail","useState","userPassword","setUserPassword","handleChangeEmail","e","target","value","handleChangePassword","submitButtonText","handleSubmit","preventDefault","auth","register","then","res","statusCode","withRouter","history","push","catch","error","console","log"],"mappings":"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","sourcesContent":["import React from 'react';\nimport FormFieldset from './FormFieldset';\nimport FormInput from './FormInput';\n\nfunction Login({ isLoading }) {\n  const [userEmail, setUserEmail] = React.useState('');\n  const [userPassword, setUserPassword] = React.useState('');\n\n  const handleChangeEmail = (e) => {\n    setUserEmail(e.target.value);\n  };\n\n  const handleChangePassword = (e) => {\n    setUserPassword(e.target.value);\n  };\n\n  const submitButtonText = isLoading ? 'Регистрация...' : 'Зарегистрироваться';\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n\n    auth.register(userEmail, userPassword)\n    .then((res) => {\n      if(res.statusCode !== 400) {\n        withRouter.history.push('/signin');\n      }\n    })\n    .catch((error) => console.log(error));\n\n    setUserEmail('');\n    setUserPassword('');\n  };\n\n  return(\n    <div className=\"sign-screen\">\n      <form\n        className=\"sign-screen__form\"\n        className=\"sign-screen__form\"\n        /* name={`${name}`} */\n        action=\"#\"\n        method=\"POST\"\n        onSubmit={handleSubmit}\n        noValidate\n      >\n        <FormFieldset\n          formName=\"form__name_place_sign-screen\"\n          title=\"Вход\"\n          formFieldset=\"form__fieldset_place_sign-screen\"\n          submitButton=\"form__submit-button_place_sign-screen\"\n          submit=\"Войти\"\n        >\n          <FormInput\n            formFieldName=\"form__field_place_sign-screen\"\n            entryFieldName=\"form__entry-field_place_sign-screen\"\n            inputId=\"sign-screen-entry-field-email\"\n            type=\"text\"\n            name=\"email\"\n            placeholder=\"Email\"\n            value=''\n            onChange=''\n            minLength=''\n            maxLength=''\n          >\n          </FormInput>\n          <FormInput\n            formFieldName=\"form__field_place_sign-screen\"\n            entryFieldName=\"form__entry-field_place_sign-screen\"\n            inputId=\"sign-screen-entry-field-password\"\n            type=\"text\"\n            name=\"password\"\n            placeholder=\"Пароль\"\n            value=''\n            onChange=''\n            minLength=''\n            maxLength=''\n          >\n          </FormInput>\n        </FormFieldset>\n      </form>\n    </div>\n  );\n}\n\nexport default Login"]},"metadata":{},"sourceType":"module"}