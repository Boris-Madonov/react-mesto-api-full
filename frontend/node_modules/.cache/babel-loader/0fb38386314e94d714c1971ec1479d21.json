{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/boris/dev/react-mesto-auth/src/components/AddPlacePopup.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport PopupWithForm from './PopupWithForm';\nimport FormInput from './FormInput';\n\nfunction AddPlacePopup({\n  isOpen,\n  onClose,\n  onAddPlace,\n  isLoading\n}) {\n  _s();\n\n  const [name, setName] = React.useState('');\n  const [link, setLink] = React.useState('');\n\n  const handleChangeName = e => {\n    setName(e.target.value);\n  };\n\n  const handleChangeLink = e => {\n    setLink(e.target.value);\n  };\n\n  const submitButtonText = isLoading ? 'Сохранение...' : 'Создать';\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    onAddPlace({\n      name: name,\n      link: link\n    });\n    setName('');\n    setLink('');\n  };\n\n  return /*#__PURE__*/_jsxDEV(PopupWithForm, {\n    name: \"new-item\",\n    title: \"\\u041D\\u043E\\u0432\\u043E\\u0435 \\u043C\\u0435\\u0441\\u0442\\u043E\",\n    submit: submitButtonText,\n    isOpen: isOpen,\n    onClose: onClose,\n    onSubmit: handleSubmit,\n    formName: \"popup__container-name\",\n    formFieldset: \"popup__container-form\",\n    submitButton: \"popup__submit-button\",\n    children: [/*#__PURE__*/_jsxDEV(FormInput, {\n      inputId: \"popup__entry-field_item-name\",\n      type: \"text\",\n      name: \"name\",\n      placeholder: \"\\u041D\\u0430\\u0437\\u0432\\u0430\\u043D\\u0438\\u0435\",\n      value: name || '',\n      onChange: handleChangeName,\n      minLength: \"1\",\n      maxLength: \"30\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(FormInput, {\n      inputId: \"popup__entry-field_item-image-url\",\n      type: \"url\",\n      name: \"link\",\n      placeholder: \"\\u0421\\u0441\\u044B\\u043B\\u043A\\u0430 \\u043D\\u0430 \\u043A\\u0430\\u0440\\u0442\\u0438\\u043D\\u043A\\u0443\",\n      value: link || '',\n      onChange: handleChangeLink,\n      minLength: \"\",\n      maxLength: \"30\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      className: \"popup__form-field\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"popup__entry-field popup__entry-field_item-image-url\",\n        id: \"entry-field-item-image-url\",\n        type: \"url\",\n        name: \"link\",\n        placeholder: \"\\u0421\\u0441\\u044B\\u043B\\u043A\\u0430 \\u043D\\u0430 \\u043A\\u0430\\u0440\\u0442\\u0438\\u043D\\u043A\\u0443\",\n        value: link || '',\n        onChange: handleChangeLink,\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"popup__entry-field-error\",\n        id: \"entry-field-item-image-url-error\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this);\n}\n\n_s(AddPlacePopup, \"49WhxRO+W4A61GIKbqU2jXmk6gk=\");\n\n_c = AddPlacePopup;\nexport default AddPlacePopup;\n\nvar _c;\n\n$RefreshReg$(_c, \"AddPlacePopup\");","map":{"version":3,"sources":["/Users/boris/dev/react-mesto-auth/src/components/AddPlacePopup.js"],"names":["React","PopupWithForm","FormInput","AddPlacePopup","isOpen","onClose","onAddPlace","isLoading","name","setName","useState","link","setLink","handleChangeName","e","target","value","handleChangeLink","submitButtonText","handleSubmit","preventDefault"],"mappings":"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","sourcesContent":["import React from 'react';\nimport PopupWithForm from './PopupWithForm';\nimport FormInput from './FormInput';\n\nfunction AddPlacePopup({ isOpen, onClose, onAddPlace, isLoading }) {\n  const [name, setName] = React.useState('');\n  const [link, setLink] = React.useState('');\n\n  const handleChangeName = (e) => {\n    setName(e.target.value);\n  };\n\n  const handleChangeLink = (e) => {\n    setLink(e.target.value);\n  };\n\n  const submitButtonText = isLoading ? 'Сохранение...' : 'Создать';\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    onAddPlace({\n      name: name,\n      link: link,\n    });\n    setName('');\n    setLink('');\n  };\n\n  return(\n    <PopupWithForm\n      name=\"new-item\"\n      title=\"Новое место\"\n      submit={submitButtonText}\n      isOpen={isOpen}\n      onClose={onClose}\n      onSubmit={handleSubmit}\n      formName=\"popup__container-name\"\n      formFieldset=\"popup__container-form\"\n      submitButton=\"popup__submit-button\"\n    >\n      <FormInput\n        inputId=\"popup__entry-field_item-name\"\n        type=\"text\"\n        name=\"name\"\n        placeholder=\"Название\"\n        value={name || ''}\n        onChange={handleChangeName}\n        minLength=\"1\"\n        maxLength=\"30\"\n      >\n      </FormInput>\n      <FormInput\n        inputId=\"popup__entry-field_item-image-url\"\n        type=\"url\"\n        name=\"link\"\n        placeholder=\"Ссылка на картинку\"\n        value={link || ''}\n        onChange={handleChangeLink}\n        minLength=''\n        maxLength=\"30\"\n      >\n      </FormInput>\n      <label className=\"popup__form-field\">\n        <input\n          className=\"popup__entry-field popup__entry-field_item-image-url\"\n          id=\"entry-field-item-image-url\"\n          type=\"url\"\n          name=\"link\"\n          placeholder=\"Ссылка на картинку\"\n          value={link || ''}\n          onChange={handleChangeLink}\n          required\n        />\n        <span\n          className=\"popup__entry-field-error\"\n          id=\"entry-field-item-image-url-error\">\n        </span>\n      </label>\n    </PopupWithForm>\n  );\n}\n\nexport default AddPlacePopup"]},"metadata":{},"sourceType":"module"}