{"ast":null,"code":"class Api {\n  constructor(options) {\n    this._response = res => {\n      if (res.ok) {\n        return res.json();\n      }\n\n      return Promise.reject(`Ошибка: ${res.status}`);\n    };\n\n    this._baseUrl = options.baseUrl;\n    this._headers = options.headers;\n  }\n\n  getInitialCards() {\n    return fetch(`${this._baseUrl}/cards`, {\n      headers: this._headers\n    }).then(this._response);\n  }\n\n  getUserInfo() {\n    return fetch(`${this._baseUrl}/users/me`, {\n      headers: this._headers\n    }).then(this._response);\n  }\n\n  sendUserInfo(data) {\n    return fetch(`${this._baseUrl}/users/me`, {\n      method: 'PATCH',\n      headers: this._headers,\n      body: JSON.stringify({\n        name: data.name,\n        about: data.about\n      })\n    }).then(this._response);\n  }\n\n  sendUserAvatar(data) {\n    return fetch(`${this._baseUrl}/users/me/avatar`, {\n      method: 'PATCH',\n      headers: this._headers,\n      body: JSON.stringify({\n        avatar: data.link\n      })\n    }).then(this._response);\n  }\n\n  sendCard(data) {\n    return fetch(`${this._baseUrl}/cards`, {\n      method: 'POST',\n      headers: this._headers,\n      body: JSON.stringify({\n        name: data.name,\n        link: data.link\n      })\n    }).then(this._response);\n  }\n\n  likeCard(id) {\n    return fetch(`${this._baseUrl}/cards/likes/${id}`, {\n      method: 'PUT',\n      headers: this._headers\n    }).then(this._response);\n  }\n\n  deleteLikeCard(id) {\n    return fetch(`${this._baseUrl}/cards/likes/${id}`, {\n      method: 'DELETE',\n      headers: this._headers\n    }).then(this._response);\n  }\n\n  deleteCard(id) {\n    return fetch(`${this._baseUrl}/cards/${id}`, {\n      method: 'DELETE',\n      headers: this._headers\n    }).then(this._response);\n  }\n\n}\n\nconst api = new Api({\n  baseUrl: 'https://mesto.nomoreparties.co/v1/cohort-14',\n  headers: {\n    authorization: 'e85ea904-e4e6-4bf9-b3e5-7844a7dfa51b',\n    'Content-Type': 'application/json'\n  }\n});\nexport default api;","map":{"version":3,"sources":["/Users/boris/dev/react-mesto-auth/src/utils/api.js"],"names":["Api","constructor","options","_response","res","ok","json","Promise","reject","status","_baseUrl","baseUrl","_headers","headers","getInitialCards","fetch","then","getUserInfo","sendUserInfo","data","method","body","JSON","stringify","name","about","sendUserAvatar","avatar","link","sendCard","likeCard","id","deleteLikeCard","deleteCard","api","authorization"],"mappings":"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","sourcesContent":["class Api {\n    constructor(options) {\n        this._baseUrl = options.baseUrl;\n        this._headers = options.headers;\n    }\n\n    _response = (res) => {\n        if (res.ok) {\n            return res.json();\n        }\n        return Promise.reject(`Ошибка: ${res.status}`);\n    }\n\n    getInitialCards() {\n        return fetch(`${this._baseUrl}/cards`, {\n            headers: this._headers\n        })\n            .then(this._response)\n    }\n\n    getUserInfo() {\n        return fetch(`${this._baseUrl}/users/me`, {\n            headers: this._headers\n        })\n        .then(this._response)\n    }\n\n    sendUserInfo(data) {\n        return fetch(`${this._baseUrl}/users/me`, {\n            method: 'PATCH',\n            headers: this._headers,\n            body: JSON.stringify({\n                name: data.name,\n                about: data.about\n            })\n        })\n        .then(this._response)\n    }\n\n    sendUserAvatar(data) {\n        return fetch(`${this._baseUrl}/users/me/avatar`, {\n            method: 'PATCH',\n            headers: this._headers,\n            body: JSON.stringify({\n                avatar: data.link\n            })\n        })\n        .then(this._response)\n    }\n\n    sendCard(data) {\n        return fetch(`${this._baseUrl}/cards`, {\n            method: 'POST',\n            headers: this._headers,\n            body: JSON.stringify({\n                name: data.name,\n                link: data.link\n            })\n        })\n        .then(this._response)\n    }\n\n    likeCard(id) {\n        return fetch(`${this._baseUrl}/cards/likes/${id}`, {\n            method: 'PUT',\n            headers: this._headers\n        })\n        .then(this._response)\n    }\n\n    deleteLikeCard(id) {\n        return fetch(`${this._baseUrl}/cards/likes/${id}`, {\n            method: 'DELETE',\n            headers: this._headers\n        })\n        .then(this._response)\n    }\n\n    deleteCard(id) {\n        return fetch(`${this._baseUrl}/cards/${id}`, {\n            method: 'DELETE',\n            headers: this._headers\n        })\n        .then(this._response)\n    }\n}\n\nconst api = new Api({\n    baseUrl: 'https://mesto.nomoreparties.co/v1/cohort-14',\n    headers: {\n        authorization: 'e85ea904-e4e6-4bf9-b3e5-7844a7dfa51b',\n        'Content-Type': 'application/json'\n    }\n});\n\nexport default api"]},"metadata":{},"sourceType":"module"}