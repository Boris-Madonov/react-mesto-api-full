{"ast":null,"code":"import{setToken}from'../utils/token';export var BASE_URL='https://auth.nomoreparties.co';export var register=function register(email,password){return fetch(\"\".concat(BASE_URL,\"/signup\"),{method:'POST',headers:{'Accept':'application/json','Content-Type':'application/json'},body:JSON.stringify({email:email,password:password})}).then(function(response){try{if(response.status===201){return response.json();}}catch(error){console.log(error);return error;}}).then(function(res){return res;}).catch(function(error){return console.log(error);});};export var authorize=function authorize(email,password){return fetch(\"\".concat(BASE_URL,\"/signin\"),{method:'POST',headers:{'Accept':'application/json','Content-Type':'application/json'},body:JSON.stringify({email:email,password:password})}).then(function(response){try{if(response.status===200){return response.json();}}catch(error){console.log(error);return error;}}).then(function(data){if(data){setToken(data.token);return data;}else{return;}}).catch(function(err){return console.log(err);});};export var checkToken=function checkToken(token){return fetch(\"\".concat(BASE_URL,\"/users/me\"),{method:'GET',headers:{'Accept':'application/json','Content-Type':'application/json','Authorization':\"Bearer \".concat(token)}}).then(function(res){return res.json();}).then(function(data){return data;});};","map":{"version":3,"sources":["/Users/boris/dev/react-mesto-auth/src/components/Auth.js"],"names":["setToken","BASE_URL","register","email","password","fetch","method","headers","body","JSON","stringify","then","response","status","json","error","console","log","res","catch","authorize","data","token","err","checkToken"],"mappings":"AAAA,OAASA,QAAT,KAAyB,gBAAzB,CAEA,MAAO,IAAMC,CAAAA,QAAQ,CAAG,+BAAjB,CAEP,MAAO,IAAMC,CAAAA,QAAQ,CAAG,QAAXA,CAAAA,QAAW,CAACC,KAAD,CAAQC,QAAR,CAAqB,CAC3C,MAAOC,CAAAA,KAAK,WAAIJ,QAAJ,YAAuB,CACjCK,MAAM,CAAE,MADyB,CAEjCC,OAAO,CAAE,CACP,SAAU,kBADH,CAEP,eAAgB,kBAFT,CAFwB,CAMjCC,IAAI,CAAEC,IAAI,CAACC,SAAL,CAAe,CAACP,KAAK,CAALA,KAAD,CAAQC,QAAQ,CAARA,QAAR,CAAf,CAN2B,CAAvB,CAAL,CAQNO,IARM,CAQD,SAACC,QAAD,CAAc,CAClB,GAAI,CACF,GAAIA,QAAQ,CAACC,MAAT,GAAoB,GAAxB,CAA4B,CAC1B,MAAOD,CAAAA,QAAQ,CAACE,IAAT,EAAP,CACD,CACF,CAAC,MAAMC,KAAN,CAAY,CACZC,OAAO,CAACC,GAAR,CAAYF,KAAZ,EACA,MAAQA,CAAAA,KAAR,CACD,CACF,CAjBM,EAkBNJ,IAlBM,CAkBD,SAACO,GAAD,CAAS,CACb,MAAOA,CAAAA,GAAP,CACD,CApBM,EAqBNC,KArBM,CAqBA,SAACJ,KAAD,QAAWC,CAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ,CAAX,EArBA,CAAP,CAsBD,CAvBM,CAyBP,MAAO,IAAMK,CAAAA,SAAS,CAAG,QAAZA,CAAAA,SAAY,CAACjB,KAAD,CAAQC,QAAR,CAAqB,CAC5C,MAAOC,CAAAA,KAAK,WAAIJ,QAAJ,YAAuB,CACjCK,MAAM,CAAE,MADyB,CAEjCC,OAAO,CAAE,CACP,SAAU,kBADH,CAEP,eAAgB,kBAFT,CAFwB,CAMjCC,IAAI,CAAEC,IAAI,CAACC,SAAL,CAAe,CAACP,KAAK,CAALA,KAAD,CAAQC,QAAQ,CAARA,QAAR,CAAf,CAN2B,CAAvB,CAAL,CAQNO,IARM,CAQD,SAACC,QAAD,CAAc,CAClB,GAAI,CACF,GAAIA,QAAQ,CAACC,MAAT,GAAoB,GAAxB,CAA4B,CAC1B,MAAOD,CAAAA,QAAQ,CAACE,IAAT,EAAP,CACD,CACF,CAAC,MAAMC,KAAN,CAAY,CACZC,OAAO,CAACC,GAAR,CAAYF,KAAZ,EACA,MAAQA,CAAAA,KAAR,CACD,CACF,CAjBM,EAkBNJ,IAlBM,CAkBD,SAACU,IAAD,CAAU,CACd,GAAGA,IAAH,CAAS,CACPrB,QAAQ,CAACqB,IAAI,CAACC,KAAN,CAAR,CACA,MAAOD,CAAAA,IAAP,CACD,CAHD,IAGO,CACL,OACD,CACF,CAzBM,EA0BNF,KA1BM,CA0BA,SAAAI,GAAG,QAAIP,CAAAA,OAAO,CAACC,GAAR,CAAYM,GAAZ,CAAJ,EA1BH,CAAP,CA2BD,CA5BM,CA8BP,MAAO,IAAMC,CAAAA,UAAU,CAAG,QAAbA,CAAAA,UAAa,CAACF,KAAD,CAAW,CACnC,MAAOjB,CAAAA,KAAK,WAAIJ,QAAJ,cAAyB,CACnCK,MAAM,CAAE,KAD2B,CAEnCC,OAAO,CAAE,CACP,SAAU,kBADH,CAEP,eAAgB,kBAFT,CAGP,iCAA2Be,KAA3B,CAHO,CAF0B,CAAzB,CAAL,CAQNX,IARM,CAQD,SAAAO,GAAG,QAAIA,CAAAA,GAAG,CAACJ,IAAJ,EAAJ,EARF,EASNH,IATM,CASD,SAAAU,IAAI,QAAIA,CAAAA,IAAJ,EATH,CAAP,CAUD,CAXM","sourcesContent":["import { setToken } from '../utils/token';\n\nexport const BASE_URL = 'https://auth.nomoreparties.co';\n\nexport const register = (email, password) => {\n  return fetch(`${BASE_URL}/signup`, {\n    method: 'POST',\n    headers: {\n      'Accept': 'application/json',\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({email, password})\n  })\n  .then((response) => {\n    try {\n      if (response.status === 201){\n        return response.json();\n      }\n    } catch(error){\n      console.log(error)\n      return (error)\n    }\n  })\n  .then((res) => {\n    return res;\n  })\n  .catch((error) => console.log(error));\n};\n\nexport const authorize = (email, password) => {\n  return fetch(`${BASE_URL}/signin`, {\n    method: 'POST',\n    headers: {\n      'Accept': 'application/json',\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({email, password})\n  })\n  .then((response) => {\n    try {\n      if (response.status === 200){\n        return response.json();\n      }\n    } catch(error){\n      console.log(error)\n      return (error)\n    }\n  })\n  .then((data) => {\n    if(data) {\n      setToken(data.token);\n      return data;\n    } else {\n      return;\n    }\n  })\n  .catch(err => console.log(err))\n};\n\nexport const checkToken = (token) => {\n  return fetch(`${BASE_URL}/users/me`, {\n    method: 'GET',\n    headers: {\n      'Accept': 'application/json',\n      'Content-Type': 'application/json',\n      'Authorization': `Bearer ${token}`,\n    }\n  })\n  .then(res => res.json())\n  .then(data => data)\n}"]},"metadata":{},"sourceType":"module"}