{"ast":null,"code":"import _slicedToArray from\"/Users/boris/dev/react-mesto-auth/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import{jsx as _jsx}from\"react/jsx-runtime\";import React from'react';import PopupWithForm from'./PopupWithForm';import FormInput from'./FormInput';import{CurrentUserContext}from'../contexts/CurrentUserContext';function EditAvatarPopup(_ref){var isOpen=_ref.isOpen,onClose=_ref.onClose,onUpdateAvatar=_ref.onUpdateAvatar,isLoading=_ref.isLoading;var user=React.useContext(CurrentUserContext);var _React$useState=React.useState(''),_React$useState2=_slicedToArray(_React$useState,2),avatar=_React$useState2[0],setAvatar=_React$useState2[1];React.useEffect(function(){setAvatar(user.avatar);},[user]);var handleChangeAvatar=function handleChangeAvatar(e){setAvatar(e.target.value);};var submitButtonText=isLoading?'Сохранение...':'Сохранить';var handleSubmit=function handleSubmit(e){e.preventDefault();onUpdateAvatar({link:avatar});};return/*#__PURE__*/_jsx(PopupWithForm,{name:\"update-avatar\",title:\"\\u041E\\u0431\\u043D\\u043E\\u0432\\u0438\\u0442\\u044C \\u0430\\u0432\\u0430\\u0442\\u0430\\u0440\",submit:submitButtonText,isOpen:isOpen,onClose:onClose,onSubmit:handleSubmit,formName:\"form__name_place_popup\",formFieldset:\"form__fieldset_place_popup\",submitButton:\"form__submit-button_place_popup\",children:/*#__PURE__*/_jsx(FormInput,{formFieldName:\"form__field_place_popup\",entryFieldName:\"form__entry-field_place_popup\",inputId:\"popup__entry-field_avatar-image-url\",type:\"url\",name:\"link\",placeholder:\"\\u0423\\u043A\\u0430\\u0436\\u0438\\u0442\\u0435 \\u0441\\u0441\\u044B\\u043B\\u043A\\u0443 \\u043D\\u0430 \\u0430\\u0432\\u0430\\u0442\\u0430\\u0440\",value:avatar||'',onChange:handleChangeAvatar,minLength:\"\",maxLength:\"\"})});}export default EditAvatarPopup;","map":{"version":3,"sources":["/Users/boris/dev/react-mesto-auth/src/components/EditAvatarPopup.js"],"names":["React","PopupWithForm","FormInput","CurrentUserContext","EditAvatarPopup","isOpen","onClose","onUpdateAvatar","isLoading","user","useContext","useState","avatar","setAvatar","useEffect","handleChangeAvatar","e","target","value","submitButtonText","handleSubmit","preventDefault","link"],"mappings":"mMAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,MAAOC,CAAAA,aAAP,KAA0B,iBAA1B,CACA,MAAOC,CAAAA,SAAP,KAAsB,aAAtB,CACA,OAASC,kBAAT,KAAmC,gCAAnC,CAEA,QAASC,CAAAA,eAAT,MAAyE,IAA9CC,CAAAA,MAA8C,MAA9CA,MAA8C,CAAtCC,OAAsC,MAAtCA,OAAsC,CAA7BC,cAA6B,MAA7BA,cAA6B,CAAbC,SAAa,MAAbA,SAAa,CACvE,GAAMC,CAAAA,IAAI,CAAGT,KAAK,CAACU,UAAN,CAAiBP,kBAAjB,CAAb,CADuE,oBAE3CH,KAAK,CAACW,QAAN,CAAe,EAAf,CAF2C,oDAEhEC,MAFgE,qBAExDC,SAFwD,qBAIvEb,KAAK,CAACc,SAAN,CAAgB,UAAM,CACpBD,SAAS,CAACJ,IAAI,CAACG,MAAN,CAAT,CACD,CAFD,CAEG,CAACH,IAAD,CAFH,EAIA,GAAMM,CAAAA,kBAAkB,CAAG,QAArBA,CAAAA,kBAAqB,CAACC,CAAD,CAAO,CAChCH,SAAS,CAACG,CAAC,CAACC,MAAF,CAASC,KAAV,CAAT,CACD,CAFD,CAIA,GAAMC,CAAAA,gBAAgB,CAAGX,SAAS,CAAG,eAAH,CAAqB,WAAvD,CAEA,GAAMY,CAAAA,YAAY,CAAG,QAAfA,CAAAA,YAAe,CAACJ,CAAD,CAAO,CAC1BA,CAAC,CAACK,cAAF,GACAd,cAAc,CAAC,CACbe,IAAI,CAAEV,MADO,CAAD,CAAd,CAGD,CALD,CAOA,mBACE,KAAC,aAAD,EACE,IAAI,CAAC,eADP,CAEE,KAAK,CAAC,uFAFR,CAGE,MAAM,CAAEO,gBAHV,CAIE,MAAM,CAAEd,MAJV,CAKE,OAAO,CAAEC,OALX,CAME,QAAQ,CAAEc,YANZ,CAOE,QAAQ,CAAC,wBAPX,CAQE,YAAY,CAAC,4BARf,CASE,YAAY,CAAC,iCATf,uBAWE,KAAC,SAAD,EACE,aAAa,CAAC,yBADhB,CAEE,cAAc,CAAC,+BAFjB,CAGE,OAAO,CAAC,qCAHV,CAIE,IAAI,CAAC,KAJP,CAKE,IAAI,CAAC,MALP,CAME,WAAW,CAAC,mIANd,CAOE,KAAK,CAAER,MAAM,EAAI,EAPnB,CAQE,QAAQ,CAAEG,kBARZ,CASE,SAAS,CAAC,EATZ,CAUE,SAAS,CAAC,EAVZ,EAXF,EADF,CA2BD,CAED,cAAeX,CAAAA,eAAf","sourcesContent":["import React from 'react';\nimport PopupWithForm from './PopupWithForm';\nimport FormInput from './FormInput';\nimport { CurrentUserContext } from '../contexts/CurrentUserContext';\n\nfunction EditAvatarPopup({ isOpen, onClose, onUpdateAvatar, isLoading }) {\n  const user = React.useContext(CurrentUserContext);\n  const [avatar, setAvatar] = React.useState('')\n\n  React.useEffect(() => {\n    setAvatar(user.avatar);\n  }, [user]);\n\n  const handleChangeAvatar = (e) => {\n    setAvatar(e.target.value);\n  };\n\n  const submitButtonText = isLoading ? 'Сохранение...' : 'Сохранить';\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    onUpdateAvatar({\n      link: avatar,\n    });\n  };\n\n  return(\n    <PopupWithForm\n      name=\"update-avatar\"\n      title=\"Обновить аватар\"\n      submit={submitButtonText}\n      isOpen={isOpen}\n      onClose={onClose}\n      onSubmit={handleSubmit}\n      formName=\"form__name_place_popup\"\n      formFieldset=\"form__fieldset_place_popup\"\n      submitButton=\"form__submit-button_place_popup\"\n    >\n      <FormInput\n        formFieldName=\"form__field_place_popup\"\n        entryFieldName=\"form__entry-field_place_popup\"\n        inputId=\"popup__entry-field_avatar-image-url\"\n        type=\"url\"\n        name=\"link\"\n        placeholder=\"Укажите ссылку на аватар\"\n        value={avatar || ''}\n        onChange={handleChangeAvatar}\n        minLength=''\n        maxLength=''\n      >\n      </FormInput>\n    </PopupWithForm>\n  );\n}\n\nexport default EditAvatarPopup"]},"metadata":{},"sourceType":"module"}