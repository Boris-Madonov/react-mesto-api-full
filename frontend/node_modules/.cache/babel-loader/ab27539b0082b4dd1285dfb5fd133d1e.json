{"ast":null,"code":"export var BASE_URL='https://auth.nomoreparties.co';var response=function response(res){if(res.ok){return res.json();}return Promise.reject(res);};export var register=function register(email,password){return fetch(\"\".concat(BASE_URL,\"/signup\"),{method:'POST',headers:{'Accept':'application/json','Content-Type':'application/json'},body:JSON.stringify({email:email,password:password})}).then(response);};export var authorize=function authorize(email,password){return fetch(\"\".concat(BASE_URL,\"/signin\"),{method:'POST',headers:{'Accept':'application/json','Content-Type':'application/json'},body:JSON.stringify({email:email,password:password})}).then(response);};export var checkToken=function checkToken(token){return fetch(\"\".concat(BASE_URL,\"/users/me\"),{method:'GET',headers:{'Accept':'application/json','Content-Type':'application/json','Authorization':\"Bearer \".concat(token)}}).then(response);};","map":{"version":3,"sources":["/Users/boris/dev/react-mesto-auth/src/utils/auth.js"],"names":["BASE_URL","response","res","ok","json","Promise","reject","register","email","password","fetch","method","headers","body","JSON","stringify","then","authorize","checkToken","token"],"mappings":"AAAA,MAAO,IAAMA,CAAAA,QAAQ,CAAG,+BAAjB,CAEP,GAAMC,CAAAA,QAAQ,CAAG,QAAXA,CAAAA,QAAW,CAACC,GAAD,CAAS,CACxB,GAAIA,GAAG,CAACC,EAAR,CAAY,CACR,MAAOD,CAAAA,GAAG,CAACE,IAAJ,EAAP,CACH,CACD,MAAOC,CAAAA,OAAO,CAACC,MAAR,CAAeJ,GAAf,CAAP,CACD,CALD,CAOA,MAAO,IAAMK,CAAAA,QAAQ,CAAG,QAAXA,CAAAA,QAAW,CAACC,KAAD,CAAQC,QAAR,CAAqB,CAC3C,MAAOC,CAAAA,KAAK,WAAIV,QAAJ,YAAuB,CACjCW,MAAM,CAAE,MADyB,CAEjCC,OAAO,CAAE,CACP,SAAU,kBADH,CAEP,eAAgB,kBAFT,CAFwB,CAMjCC,IAAI,CAAEC,IAAI,CAACC,SAAL,CAAe,CAACP,KAAK,CAALA,KAAD,CAAQC,QAAQ,CAARA,QAAR,CAAf,CAN2B,CAAvB,CAAL,CAQNO,IARM,CAQDf,QARC,CAAP,CASD,CAVM,CAYP,MAAO,IAAMgB,CAAAA,SAAS,CAAG,QAAZA,CAAAA,SAAY,CAACT,KAAD,CAAQC,QAAR,CAAqB,CAC5C,MAAOC,CAAAA,KAAK,WAAIV,QAAJ,YAAuB,CACjCW,MAAM,CAAE,MADyB,CAEjCC,OAAO,CAAE,CACP,SAAU,kBADH,CAEP,eAAgB,kBAFT,CAFwB,CAMjCC,IAAI,CAAEC,IAAI,CAACC,SAAL,CAAe,CAACP,KAAK,CAALA,KAAD,CAAQC,QAAQ,CAARA,QAAR,CAAf,CAN2B,CAAvB,CAAL,CAQNO,IARM,CAQDf,QARC,CAAP,CASD,CAVM,CAYP,MAAO,IAAMiB,CAAAA,UAAU,CAAG,QAAbA,CAAAA,UAAa,CAACC,KAAD,CAAW,CACnC,MAAOT,CAAAA,KAAK,WAAIV,QAAJ,cAAyB,CACnCW,MAAM,CAAE,KAD2B,CAEnCC,OAAO,CAAE,CACP,SAAU,kBADH,CAEP,eAAgB,kBAFT,CAGP,iCAA2BO,KAA3B,CAHO,CAF0B,CAAzB,CAAL,CAQNH,IARM,CAQDf,QARC,CAAP,CASD,CAVM","sourcesContent":["export const BASE_URL = 'https://auth.nomoreparties.co';\n\nconst response = (res) => {\n  if (res.ok) {\n      return res.json();\n  }\n  return Promise.reject(res);\n};\n\nexport const register = (email, password) => {\n  return fetch(`${BASE_URL}/signup`, {\n    method: 'POST',\n    headers: {\n      'Accept': 'application/json',\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({email, password})\n  })\n  .then(response);\n};\n\nexport const authorize = (email, password) => {\n  return fetch(`${BASE_URL}/signin`, {\n    method: 'POST',\n    headers: {\n      'Accept': 'application/json',\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({email, password})\n  })\n  .then(response);\n};\n\nexport const checkToken = (token) => {\n  return fetch(`${BASE_URL}/users/me`, {\n    method: 'GET',\n    headers: {\n      'Accept': 'application/json',\n      'Content-Type': 'application/json',\n      'Authorization': `Bearer ${token}`,\n    }\n  })\n  .then(response);\n}"]},"metadata":{},"sourceType":"module"}